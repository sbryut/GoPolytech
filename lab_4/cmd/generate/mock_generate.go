// Code generated by MockGen. DO NOT EDIT.
// Source: generate (interfaces: Multiplication)

// Package generate is a generated GoMock package.
package generate

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMultiplication is a mock of Multiplication interface.
type MockMultiplication struct {
	ctrl     *gomock.Controller
	recorder *MockMultiplicationMockRecorder
}

// MockMultiplicationMockRecorder is the mock recorder for MockMultiplication.
type MockMultiplicationMockRecorder struct {
	mock *MockMultiplication
}

// NewMockMultiplication creates a new mock instance.
func NewMockMultiplication(ctrl *gomock.Controller) *MockMultiplication {
	mock := &MockMultiplication{ctrl: ctrl}
	mock.recorder = &MockMultiplicationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMultiplication) EXPECT() *MockMultiplicationMockRecorder {
	return m.recorder
}

// Multiplication mocks base method.
func (m *MockMultiplication) Multiplication(arg0, arg1 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Multiplication", arg0, arg1)
	ret0, _ := ret[0].(int)
	return ret0
}

// Multiplication indicates an expected call of Multiplication.
func (mr *MockMultiplicationMockRecorder) Multiplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Multiplication", reflect.TypeOf((*MockMultiplication)(nil).Multiplication), arg0, arg1)
}
